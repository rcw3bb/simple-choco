buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'
    alias(libs.plugins.gradle.plugin.publish)
    alias(libs.plugins.shadow)
    alias(libs.plugins.snyk)
}

ext {
    publishingPath = version.toString().contains("SNAPSHOT") ? 'snapshots' : 'internal'
    pluginDescription = 'The plugin that allows you access to choco commands inside gradle as task'
}

configurations {
    plugin
    implementation.extendsFrom(plugin)

    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(shadowJar)
    }

}

shadowJar {
    configurations = [project.configurations.plugin]
    archiveClassifier.set("")
    relocate 'xyz.ronella.trivial', "${project.group}.shadow.trivial"
    minimize()
}

gradlePlugin {
    website = 'https://github.com/rcw3bb/simple-choco'
    vcsUrl = 'https://github.com/rcw3bb/simple-choco'
    description = pluginDescription
    plugins {
        simpleChoco {
            id = 'xyz.ronella.simple-choco'
            displayName = 'Simple Choco Plugin'
            description = pluginDescription
            implementationClass = 'xyz.ronella.gradle.plugin.simple.choco.SimpleChocoPlugin'
            tags = ['ronella', 'simple-choco', 'choco', 'chocolatey', 'packages', 'install'
                    , 'package manager', 'package', 'automation', 'software management', 'management'
                    , 'software', 'software automation']
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    plugin libs.trivial.chunk

    testImplementation testLibs.bundles.unit.test
}

test {
    useJUnitPlatform()
}

jar {
    enabled = false
    dependsOn shadowJar
}